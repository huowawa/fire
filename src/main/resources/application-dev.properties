#开发环境配置文件
server.port=8080
server.servlet.context-path=/
server.tomcat.uri-encoding=utf-8

redis.host=127.0.0.1
redis.port=6379
redis.maxTotal=5
redis.maxIdle=5
redis.testOnBorrow=true

#project.name=boot
#logging.file=D:/logs/springboot.log
#共有8个级别，按照从低到高为：All < Trace < Debug < Info < Warn < Error < Fatal < OFF.
#程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。
#logging.level.com.soft=debug

#数据库相关配置
spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:ORCL
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.username=scott
spring.datasource.password=tiger

#指定MyBatis-Plus配置文件  复杂配置可以单独写在 一个xml
#全局配置不能和  mybatis-plus.configuration.xx.xx 配置共同使用
mybatis-plus.config-location=classpath:mybatis/mybatis-config.xml
#如果接口方法对应的XML放在resources目录下 需要告诉MyBatis-Plus哪里扫描Mapper
mybatis-plus.mapper-locations=classpath:mapper/**/*.xml
#定义别名扫描的包
mybatis-plus.type-aliases-package=com.soft.fire.platform.*.model
#全局ID生成策略  设置后 可以省略实体对象中的  @TableId(type = IdType.INPUT) 配置
mybatis-plus.global-config.db-config.id-type=assign_uuid
#是否开启自动驼峰命名规则（camel case）映射
#此属性在 MyBatis 中原默认值为 false，在 MyBatis-Plus 中默认开启
#mybatis-plus.configuration.map-underscore-to-camel-case=true
#MP 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。
#mybatis-plus.configuration.cache-enabled=true



#HikariCP数据源 连接池配置
#spring.datasource.hikari.maximum-pool-size=11
#spring.datasource.hikari.minimumIdle=5
#spring.datasource.hikari.idleTimeout=600000
#spring.datasource.hikari.connectionTimeout=30000
#spring.datasource.hikari.maxLifetime=1800000

#Druid数据源相关配置
# 配置初始化大小、最小、最大
spring.datasource.druid.initial-size=5
#最小空闲连接数
spring.datasource.druid.min-idle=3
#最大空闲连接数
spring.datasource.druid.max-active=20


#配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
#配置一个连接在池中最小生存的时间 单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000

#用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 'x' FROM DUAL
#申请连接的时候检测
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
spring.datasource.druid.test-on-return=false
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=50


#Filter配置
spring.datasource.druid.filters=wall,stat,log4j2

#Druid内置提供一个StatFilter，用于统计监控信息。
#是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，
#如需启用建议设置密码或白名单以保障安全）
spring.datasource.druid.stat-view-servlet.enabled=true
#设置监控页面账号
spring.datasource.druid.stat-view-servlet.login-username=smith
#配置监控页面访问密码
spring.datasource.druid.stat-view-servlet.login-password=123456
#在StatViewSerlvet输出的html页面中，有一个功能是Reset All，执行这个操作之后，
#会导致所有计数器清零，重新计数。你可以通过配置参数关闭它
spring.datasource.druid.stat-view-servlet.reset-enable=false
#配置访问控制  deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
#如果allow没有配置或者为空，则允许所有访问
spring.datasource.druid.stat-view-servlet.allow=192.168.31.15
#设置禁止访问监控页面的IP地址  不支持IPV6
spring.datasource.druid.stat-view-servlet.deny=127.0.0.1,127.0.0.2

#慢SQL记录
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=oracle
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.merge-sql=true
#慢sql时间设置,即执行时间大于200毫秒的都是慢sql
spring.datasource.druid.filter.stat.slow-sql-millis=200

spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.result-set-log-enabled=false

spring.datasource.druid.filter.log4j2.enabled=false
#所有连接相关的日志
spring.datasource.druid.filter.log4j2.connection-log-enabled=false
#所有Statement相关的日志
spring.datasource.druid.filter.log4j2.statement-log-enabled=false
#是否显示结果集
spring.datasource.druid.filter.log4j2.result-set-log-enabled=true
# 是否显示SQL语句
spring.datasource.druid.filter.log4j2.statement-executable-sql-log-enable=false

#Sql防注入
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=oracle
#设置允许删除 真删
spring.datasource.druid.filter.wall.config.delete-allow=true
spring.datasource.druid.filter.wall.config.drop-table-allow=false